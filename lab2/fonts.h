/*
 * fonts.h
 *
 *  Created on: Oct 4, 2025
 *      Author: Cerberus
 */

#ifndef INC_FONTS_H_
#define INC_FONTS_H_

#include <stdint.h>

typedef struct {
    const uint8_t* data;   // pointer to raw font bitmap data
    uint8_t width;         // character width in pixels
    uint8_t height;        // character height in pixels
    uint8_t first;         // first supported ASCII code
    uint8_t last;          // last supported ASCII code
    uint8_t bytes;         // bytes per character (usually width)
} font_t;

/*
 * 6x8 monochrome font
 * Each glyph is 6 bytes (6 columns of 8 bits)
 * Bit0 = top pixel, Bit7 = bottom pixel
 * Range: ASCII 32..127
 */
static const uint8_t font6x8_data[] = {
    0x00,0x00,0x00,0x00,0x00,0x00, // 32
    0x00,0x00,0x5F,0x00,0x00,0x00, // 33 !
    0x00,0x07,0x00,0x07,0x00,0x00, // 34 "
    0x14,0x7F,0x14,0x7F,0x14,0x00, // 35 #
    0x24,0x2A,0x7F,0x2A,0x12,0x00, // 36 $
    0x23,0x13,0x08,0x64,0x62,0x00, // 37 %
    0x36,0x49,0x55,0x22,0x50,0x00, // 38 &
    0x00,0x05,0x03,0x00,0x00,0x00, // 39 '
    0x00,0x1C,0x22,0x41,0x00,0x00, // 40 (
    0x00,0x41,0x22,0x1C,0x00,0x00, // 41 )
    0x14,0x08,0x3E,0x08,0x14,0x00, // 42 *
    0x08,0x08,0x3E,0x08,0x08,0x00, // 43 +
    0x00,0x50,0x30,0x00,0x00,0x00, // 44 ,
    0x08,0x08,0x08,0x08,0x08,0x00, // 45 -
    0x00,0x60,0x60,0x00,0x00,0x00, // 46 .
    0x20,0x10,0x08,0x04,0x02,0x00, // 47 /
    0x3E,0x51,0x49,0x45,0x3E,0x00, // 48 0
    0x00,0x42,0x7F,0x40,0x00,0x00, // 49 1
    0x42,0x61,0x51,0x49,0x46,0x00, // 50 2
    0x21,0x41,0x45,0x4B,0x31,0x00, // 51 3
    0x18,0x14,0x12,0x7F,0x10,0x00, // 52 4
    0x27,0x45,0x45,0x45,0x39,0x00, // 53 5
    0x3C,0x4A,0x49,0x49,0x30,0x00, // 54 6
    0x01,0x71,0x09,0x05,0x03,0x00, // 55 7
    0x36,0x49,0x49,0x49,0x36,0x00, // 56 8
    0x06,0x49,0x49,0x29,0x1E,0x00, // 57 9
    0x00,0x36,0x36,0x00,0x00,0x00, // 58 :
    0x00,0x56,0x36,0x00,0x00,0x00, // 59 ;
    0x08,0x14,0x22,0x41,0x00,0x00, // 60 <
    0x14,0x14,0x14,0x14,0x14,0x00, // 61 =
    0x00,0x41,0x22,0x14,0x08,0x00, // 62 >
    0x02,0x01,0x51,0x09,0x06,0x00, // 63 ?
    0x32,0x49,0x79,0x41,0x3E,0x00, // 64 @
    0x7E,0x11,0x11,0x11,0x7E,0x00, // 65 A
    0x7F,0x49,0x49,0x49,0x36,0x00, // 66 B
    0x3E,0x41,0x41,0x41,0x22,0x00, // 67 C
    0x7F,0x41,0x41,0x22,0x1C,0x00, // 68 D
    0x7F,0x49,0x49,0x49,0x41,0x00, // 69 E
    0x7F,0x09,0x09,0x09,0x01,0x00, // 70 F
    0x3E,0x41,0x49,0x49,0x7A,0x00, // 71 G
    0x7F,0x08,0x08,0x08,0x7F,0x00, // 72 H
    0x00,0x41,0x7F,0x41,0x00,0x00, // 73 I
    0x20,0x40,0x41,0x3F,0x01,0x00, // 74 J
    0x7F,0x08,0x14,0x22,0x41,0x00, // 75 K
    0x7F,0x40,0x40,0x40,0x40,0x00, // 76 L
    0x7F,0x02,0x0C,0x02,0x7F,0x00, // 77 M
    0x7F,0x04,0x08,0x10,0x7F,0x00, // 78 N
    0x3E,0x41,0x41,0x41,0x3E,0x00, // 79 O
    0x7F,0x09,0x09,0x09,0x06,0x00, // 80 P
    0x3E,0x41,0x51,0x21,0x5E,0x00, // 81 Q
    0x7F,0x09,0x19,0x29,0x46,0x00, // 82 R
    0x46,0x49,0x49,0x49,0x31,0x00, // 83 S
    0x01,0x01,0x7F,0x01,0x01,0x00, // 84 T
    0x3F,0x40,0x40,0x40,0x3F,0x00, // 85 U
    0x1F,0x20,0x40,0x20,0x1F,0x00, // 86 V
    0x3F,0x40,0x38,0x40,0x3F,0x00, // 87 W
    0x63,0x14,0x08,0x14,0x63,0x00, // 88 X
    0x07,0x08,0x70,0x08,0x07,0x00, // 89 Y
    0x61,0x51,0x49,0x45,0x43,0x00, // 90 Z
    0x00,0x7F,0x41,0x41,0x00,0x00, // 91 [
    0x02,0x04,0x08,0x10,0x20,0x00, // 92 backslash
    0x00,0x41,0x41,0x7F,0x00,0x00, // 93 ]
    0x04,0x02,0x01,0x02,0x04,0x00, // 94 ^
    0x80,0x80,0x80,0x80,0x80,0x00, // 95 _
    0x00,0x01,0x02,0x00,0x00,0x00, // 96 `
    0x20,0x54,0x54,0x54,0x78,0x00, // 97 a
    0x7F,0x48,0x44,0x44,0x38,0x00, // 98 b
    0x38,0x44,0x44,0x44,0x20,0x00, // 99 c
    0x38,0x44,0x44,0x48,0x7F,0x00, //100 d
    0x38,0x54,0x54,0x54,0x18,0x00, //101 e
    0x08,0x7E,0x09,0x01,0x02,0x00, //102 f
    0x08,0x54,0x54,0x54,0x3C,0x00, //103 g
    0x7F,0x08,0x04,0x04,0x78,0x00, //104 h
    0x00,0x44,0x7D,0x40,0x00,0x00, //105 i
    0x20,0x40,0x44,0x3D,0x00,0x00, //106 j
    0x7F,0x10,0x28,0x44,0x00,0x00, //107 k
    0x00,0x41,0x7F,0x40,0x00,0x00, //108 l
    0x7C,0x04,0x18,0x04,0x78,0x00, //109 m
    0x7C,0x08,0x04,0x04,0x78,0x00, //110 n
    0x38,0x44,0x44,0x44,0x38,0x00, //111 o
    0x7C,0x14,0x14,0x14,0x08,0x00, //112 p
    0x08,0x14,0x14,0x18,0x7C,0x00, //113 q
    0x7C,0x08,0x04,0x04,0x08,0x00, //114 r
    0x48,0x54,0x54,0x54,0x24,0x00, //115 s
    0x04,0x3F,0x44,0x40,0x20,0x00, //116 t
    0x3C,0x40,0x40,0x20,0x7C,0x00, //117 u
    0x1C,0x20,0x40,0x20,0x1C,0x00, //118 v
    0x3C,0x40,0x30,0x40,0x3C,0x00, //119 w
    0x44,0x28,0x10,0x28,0x44,0x00, //120 x
    0x0C,0x50,0x50,0x50,0x3C,0x00, //121 y
    0x44,0x64,0x54,0x4C,0x44,0x00, //122 z
    0x00,0x08,0x36,0x41,0x00,0x00, //123 {
    0x00,0x00,0x7F,0x00,0x00,0x00, //124 |
    0x00,0x41,0x36,0x08,0x00,0x00, //125 }
    0x02,0x01,0x02,0x04,0x02,0x00, //126 ~
    0x7F,0x41,0x41,0x41,0x7F,0x00, //127 DEL (block)
};

static const font_t font6x8 = {
    .data  = font6x8_data,
    .width = 6,
    .height = 8,
    .first = 32,
    .last  = 127,
    .bytes = 6
};

#endif /* INC_FONTS_H_ */
